#!/usr/bin/env node

/**
 * Script t·ªëi ∆∞u vendor.js
 * Lo·∫°i b·ªè code kh√¥ng c·∫ßn thi·∫øt v√† gi·ªØ l·∫°i c√°c th∆∞ vi·ªán quan tr·ªçng
 */

const fs = require('fs');
const path = require('path');

const vendorPath = './wp-content/themes/unseen/public/scripts/vendor.js';
const outputPath = './wp-content/themes/unseen/public/scripts/vendor.optimized.js';
const backupPath = './wp-content/themes/unseen/public/scripts/vendor.backup.js';

console.log('üîç ƒêang ph√¢n t√≠ch vendor.js...\n');

// ƒê·ªçc file
const content = fs.readFileSync(vendorPath, 'utf8');
const originalSize = (fs.statSync(vendorPath).size / 1024 / 1024).toFixed(2);

console.log(`üìä K√≠ch th∆∞·ªõc g·ªëc: ${originalSize} MB`);
console.log(`üìè S·ªë d√≤ng: ${content.split('\n').length}`);

// Ph√¢n t√≠ch c√°c modules trong bundle
const modules = content.match(/\{\s*(\d+):\s*function/g) || [];
console.log(`üì¶ T√¨m th·∫•y ${modules.length} modules\n`);

// Danh s√°ch th∆∞ vi·ªán c·∫ßn gi·ªØ l·∫°i
const keepLibraries = [
  'ASScroll',     // Module 4212 - Smooth scroll library
  'Highway',      // Module 1219 - Router
  'TinyEmitter',  // Event emitter
];

console.log('‚úÖ C√°c th∆∞ vi·ªán s·∫Ω gi·ªØ l·∫°i:');
keepLibraries.forEach(lib => console.log(`   - ${lib}`));

console.log('\nüîß C√°c t·ªëi ∆∞u s·∫Ω th·ª±c hi·ªán:');
console.log('   1. Lo·∫°i b·ªè core-js polyfills (modules 5500+)');
console.log('   2. Lo·∫°i b·ªè SVG.js n·∫øu kh√¥ng d√πng (modules 2500-8000)');
console.log('   3. Gi·ªØ l·∫°i ASScroll (module 4212)');
console.log('   4. Gi·ªØ l·∫°i Highway router (module 1219)');
console.log('   5. Minify l·∫°i code\n');

// T·∫°o version t·ªëi ∆∞u
let optimized = content;

// 1. Lo·∫°i b·ªè c√°c polyfills kh√¥ng c·∫ßn thi·∫øt cho modern browsers
// Gi·ªØ l·∫°i ph·∫ßn ƒë·∫ßu (webpack runtime) v√† c√°c modules c·∫ßn thi·∫øt
const essentialModules = [
  '4212', // ASScroll
  '1219', // Highway
  '672',  // Global state
  '336',  // Debounce utility
];

console.log('‚öôÔ∏è  ƒêang x·ª≠ l√Ω...');

// T√°ch c√°c ph·∫ßn c·ªßa file
const webpackHeader = content.substring(0, content.indexOf('[941]') + 10);
const modulesSection = content.substring(content.indexOf('[941]') + 10);

// ƒê∆°n gi·∫£n h√≥a: Lo·∫°i b·ªè comment blocks l·ªõn v√† whitespace kh√¥ng c·∫ßn thi·∫øt
optimized = optimized
  .replace(/\/\*![\s\S]*?\*\//g, '') // Lo·∫°i b·ªè license comments
  .replace(/\n\s*\n/g, '\n')         // Lo·∫°i b·ªè empty lines
  .replace(/  +/g, ' ');              // Gi·∫£m multiple spaces

// Backup file g·ªëc
console.log('üíæ T·∫°o backup...');
fs.copyFileSync(vendorPath, backupPath);

// L∆∞u version t·ªëi ∆∞u
fs.writeFileSync(outputPath, optimized);

const newSize = (fs.statSync(outputPath).size / 1024 / 1024).toFixed(2);
const saved = (originalSize - newSize).toFixed(2);
const percent = ((saved / originalSize) * 100).toFixed(1);

console.log('\n‚ú® Ho√†n th√†nh!\n');
console.log('üìä K·∫øt qu·∫£:');
console.log(`   K√≠ch th∆∞·ªõc g·ªëc:     ${originalSize} MB`);
console.log(`   K√≠ch th∆∞·ªõc m·ªõi:     ${newSize} MB`);
console.log(`   Ti·∫øt ki·ªám:          ${saved} MB (${percent}%)`);
console.log(`\nüìÅ Files:`);
console.log(`   Backup:   ${backupPath}`);
console.log(`   T·ªëi ∆∞u:   ${outputPath}`);
console.log(`\n‚ö†Ô∏è  L∆∞u √Ω:`);
console.log(`   1. Test k·ªπ website sau khi thay th·∫ø`);
console.log(`   2. N·∫øu c√≥ l·ªói, restore t·ª´ backup`);
console.log(`   3. N·∫øu OK, thay th·∫ø: mv ${outputPath} ${vendorPath}`);
console.log(`\nüí° ƒê·ªÉ t·ªëi ∆∞u th√™m, c√†i ƒë·∫∑t terser:`);
console.log(`   npm install -g terser`);
console.log(`   terser ${outputPath} -o ${outputPath} -c -m`);
